@model BPPS.Models.feedbacks

@{
    ViewBag.Title = "Create";
}

<h2>Create feedback</h2>


@{int item = 0;}
@{bool iss = false;}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.project_id, "Project: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("project_id", null, htmlAttributes: new { @class = "form-control-static, form-control" })
                @Html.ValidationMessageFor(model => model.project_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Id, " For partner : ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var partner in ((List<string>)ViewBag.Email))
                {
                    foreach (var v in ViewBag.hasFeedback)
                    {
                        if (v == partner)
                        {
                            iss = true;
                            break;
                        }
                        iss = false;
                    }

                    if (iss==false)
                    {

                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="partners" value="@partner" checked="checked" id="partners">
                                @ViewBag.FirstName[item] @ViewBag.Lastname[item] ( @partner.ToString() )
                            </label>
                        </div>
                    }
                    else
                    {
                        <div class="form-control-static parrr"> <i>@ViewBag.FirstName[item] @ViewBag.Lastname[item] ( @partner.ToString() ) </i></div>
                    }
                    item += 1;

                }
            </div>
        </div>
        <div id="submitFeedback">
            <div class="form-group">
                @Html.Label(" ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <hr />
                    <span class="glyphicon glyphicon-arrow-up"></span>
                    &nbsp;&nbsp; <input type="checkbox" name="checked_all" checked="checked"> označit všetkých
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success btn-block" />
                </div>
            </div>
        </div>
      
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
