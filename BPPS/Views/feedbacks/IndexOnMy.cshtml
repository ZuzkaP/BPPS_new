@model PagedList.IPagedList<BPPS.Models.feedbacks>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "IndexOnMy";
}
<br>
@if (@TempData["initiated_feedback"] != null)
{
    <div class="alert alert-success"><b>Success!</b> @TempData["initiated_feedback"]</div>
}

<div class="well well-sm"> <h1 style="margin-left:100px;"> Feedbacks on my projects </h1> </div>

<table class="table table-striped" style="border-radius:5px;">
    <tr>
        <th>
            @Html.DisplayName("Project ID")
        </th>
        <th>
            @Html.DisplayName("Project Name")
        </th>
        <th>
            @Html.DisplayName("Feedback initiated")
        </th>
        <th>
            @Html.DisplayName("Feedback received")
        </th>
        <th>
            @Html.DisplayName("Business Partner Representative")
        </th>
        <th>
            @Html.DisplayName("Business Partner Email")
        </th>
        <th>
        </th>
        <th>
        </th>
        <th></th>
    </tr>


    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.project_id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Projects.name)
            </td>
            <td>
                @if (item.initiated != null)
                {
                    @Html.DisplayFor(modelItem => item.initiated)
                }
                else
                {
                    <i>@Html.DisplayName("Not initiated")</i>
                }
            </td>
            <td>
                @if (item.received != null)
                {
                    @Html.DisplayFor(modelItem => item.received)
                }
                else
                {
                    <i>@Html.DisplayName("Not received")</i>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AspNetUsers.FirstName) @Html.DisplayFor(modelItem => item.AspNetUsers.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AspNetUsers.Email)
            </td>
            <td>
                @if (item.initiated == null)
                {
                    <!--@Html.ActionLink("Initialize", "SendFeedbackEmail", new { id = item.feedback_id }, new{@class = "btn btn-success"})-->
                    <a href="@Url.Action("SendFeedbackEmail", "feedbacks",new { id=item.feedback_id })" class="btn btn-success">
                        <span class="glyphicon glyphicon-envelope" aria-hidden="true"></span>
                        Initialize
                    </a> 
                }
                else if(item.initiated != null && item.received == null)
                {
                    <!--@Html.ActionLink("Remind", "SendFeedbackEmail", new { id = item.feedback_id }, new{@class = "btn btn-success"})-->
                    <a href="@Url.Action("SendFeedbackEmail", "feedbacks",new { id=item.feedback_id })" class="btn btn-success">
                        <span class="glyphicon glyphicon-send" aria-hidden="true"></span>
                        Remind
                    </a>
                }
                else if (item.initiated != null && item.received != null)
                {
                    <!--@Html.ActionLink("Details", "Details", new { id = item.feedback_id }, new{@class = "btn btn-info"})-->
                     <a href="@Url.Action("Details", "feedbacks",new { id=item.feedback_id })" class="btn btn-info">
                        <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span>
                        Details
                    </a>
                }

            </td>
            <td>
                @if (item.initiated == null)
                {
                    <!--@Html.ActionLink("Edit", "Edit", "feedback_questions", new { id = item.feedback_id }, new{@class ="btn btn-warning"})-->
                    <a href="@Url.Action("Edit", "feedback_questions",new { id=item.feedback_id })" class="btn btn-warning">
                        <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                        Edit
                    </a>
                }
                else if (item.initiated != null && item.received != null)
                {
                    <a href="@Url.Action("PrintPDF", "feedbacks", new { id = item.feedback_id })"><img src="~/Content/Images/pdf_download.png" width="30" height="30" /></a>
                }
            </td>
            <td>
                @if (item.initiated == null && item.received == null)
                {
                    <!--@Html.ActionLink("Delete", "Delete", new { id = item.feedback_id }, new{@class = "btn btn-danger"})-->
                  <a href="@Url.Action("Delete", "feedbacks",new { id=item.feedback_id })" class="btn btn-danger">
                        <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                        Delete
                    </a>
                }
                else if (item.initiated != null && item.received != null)
                {
                    <a href="@Url.Action("ExportData", "feedbacks", new { id = item.feedback_id })"><img src="~/Content/Images/excel_download.png" width="30" height="30" /></a>
                }
            </td>
        </tr>
    }

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("IndexOnMy",
    new { page }))

<div class="pull-right">
    Export all:
    <a href="@Url.Action("PrintPDF2", "feedbacks")"><img src="~/Content/Images/pdf_download.png" width="30" height="30" /></a>
    <a href="@Url.Action("ExportData2", "feedbacks")"><img src="~/Content/Images/excel_download.png" width="30" height="30" /></a>
</div>